services:
  mysql:
    image: mysql:9
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: security
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    volumes:
      - mysql:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=pass -e 'SHOW DATABASES;'"
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:8
    environment:
      ALLOW_EMPTY_PASSWORD: yes
      REDIS_DISABLE_COMMANDS: FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli","--raw", "incr","ping" ]
      interval: 5s
      timeout: 5s
      retries: 10

  cas:
    image: apereo/cas:7.2.1
    container_name: cas
    restart: always
    ports:
      - "8099:8080"
    command: >
      --cas.standalone.configuration-directory=/etc/cas/config
      --server.ssl.enabled=false
      --server.port=8080
      --cas.service-registry.core.init-from-json=true
      --cas.service-registry.json.location=file:/etc/cas/services
      --cas.tgc.secure=false
      --cas.tgc.sameSitePolicy=Lax
    volumes:
      - ./docker/cas/http-1.json:/etc/cas/services/http-1.json

  authserver:
    image: "dexidp/dex:v2.42.1"
    deploy:
      replicas: 1
    configs:
      - source: dex_config
        target: /opt/config/dex.yml
    ports:
      - "5556:5556"
    command:
      - dex
      - serve
      - /opt/config/dex.yml
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5556/.well-known/openid-configuration" ]
      interval: 1s
      timeout: 1s
      retries: 5

configs:
  dex_config:
    file: dex.yml

volumes:
  redis:
  mysql: